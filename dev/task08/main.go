package main

import (
	"fmt"
)

//Дана переменная int64. Разработать программу
//которая устанавливает i-й бит в 1 или 0.

//Для решения предлагаю использовать побитовые операторы.

func main() {
	//Инициализируем необходимые переменные и присваиваем их из stdin.
	var integer int64
	var i uint8
	fmt.Print("Введите число для изменения: ")
	_, err := fmt.Scanln(&integer)
	if err != nil {
		fmt.Println("Необходимо ввести целое число.")
		return
	}
	fmt.Print("Введите номер бита от 0 до 63, для изменения: ")
	_, err = fmt.Scanln(&i)
	if err != nil {
		fmt.Println("Необходимо ввести число от 0 до 63.")
		return
	}
	if i > 63 {
		fmt.Println("Число должно быть меньше или равно 63")
		return
	}
	fmt.Println(reverseBit(integer, i))
}

// Функция для инвертирования i-ого бита.
// Использует побитовые операции.
// В нашем случае побитовое исключающее ИЛИ.
// Т.е. мы должны сместиться на i-ое количество раз
// от 0 позиции и поменять 0 на 1 или 1 на 0.
func reverseBit(n int64, pos uint8) int64 {
	n ^= (1 << pos)
	return n
}
