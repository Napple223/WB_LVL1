package main

import (
	"fmt"
	"sync"
)

//Написать программу, которая конкурентно
//рассчитает значение квадратов чисел взятых
//из массива (2,4,6,8,10) и выведет их квадраты в stdout.

func main() {
	//Создаем массив.
	i := [5]int{2, 4, 6, 8, 10}

	//Так как мы используем конкурентные вычисления,
	//нам необходимо использовать WaitGroup для того,
	//чтобы дождаться завершения работы всех горутин.
	var wg sync.WaitGroup
	//проходимся циклом по всем значениям массива и
	//передаем их в горутины.
	for _, v := range i {
		//каждый раз добавляем +1 к счетчику перед созданием горутины.
		wg.Add(1)
		//Вызываем анонимную функцию в горутине и передаем в него значение
		//для вычисления квадрата.
		go func(v int) {
			res := v * v
			//Печатаем вычисления в stdout.
			fmt.Println(res)
			//Уменьшаем счетчик на 1 при завершении работы горутины.
			wg.Done()
		}(v)
	}
	//Дожидаемся завершения работы всех запущенных горутин.
	wg.Wait()
}
